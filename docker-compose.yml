# version: '3'
services:

  eureka-service:
    build: 
      context: ./eureka-service
      target: local
    networks:
      - microservices-network
    ports:
      - 8761:8761
    image: eureka-service
    container_name: eureka-service

  api-gateway:
    build: 
      context: ./api-gateway
      target: local
    networks:
      - microservices-network
    ports:
      - 80:80
    depends_on:
      - eureka-service
    image: api-gateway
    container_name: api-gateway

  config-server:
    build: 
      context: ./config-server
      target: native
    networks:
      - microservices-network
    ports:
      - 8888:8888
    depends_on:
      - eureka-service
    image: config-server
    container_name: config-server

  ms1:
    build: 
      context: ./ms1
      target: local
    image: ms1
    depends_on:
      - config-server
      - zookeeper
      - kafka
      - rabbitmq
    ports:
      - 8080:8080
    networks:
      - microservices-network
    container_name: ms1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ms2:
    build: 
      context: ./ms2
      target: local
    image: ms2
    depends_on:
      - ms1
    ports:
      - 8081:8081
    networks:
      - microservices-network
    container_name: ms2

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-network
    container_name: zookeeper
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-network
    container_name: kafka

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - microservices-network
    container_name: rabbitmq

networks:
  microservices-network:
